plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'jacoco'
    id 'maven-publish'
}

version = "2.1.0"

repositories {
    mavenCentral()
}
configurations {
    ktlint
}

dependencies {
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.8.10"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.8.10"
    ktlint("com.pinterest.ktlint:ktlint-cli:1.2.1") {
        attributes {
            attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
        }
    }

}

tasks.register("ktlintCheck", JavaExec) {
    classpath = configurations.ktlint           //clases necesarias para ejecutar esta tarea
    mainClass = "com.pinterest.ktlint.Main"
    args "src/**/*.kt", "**.kts", "!**/build/**"
}

tasks.register("ktlintFormat", JavaExec) {
    classpath = configurations.ktlint
    mainClass = "com.pinterest.ktlint.Main"
    jvmArgs "--add-opens=java.base/java.lang=ALL-UNNAMED"
    args "-F", "src/**/*.kt", "**.kts", "!**/build/**"
}

tasks.named("check") {
    dependsOn tasks.named("ktlintCheck")
}

tasks.register('copyPreCommitHook', Copy) {
    from new File(rootProject.rootDir, 'scripts/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0775
}

tasks.named("build"){
    dependsOn(tasks.named("copyPreCommitHook"))
}


test {
    useJUnitPlatform()
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ingsis-group10-2024/printscript")
            version = "1.1.3"
            credentials {
                username = System.getenv("GITHUB_USERNAME") ?: ""
                password = System.getenv("GITHUB_TOKEN") ?: ""
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}








